{"version":3,"sources":["dom.js"],"names":["window","dom","console","node","log","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node2","parentNode","insertBefore","nextSibling","before","append","parent","appendChild","wrap","remove","removeChild","empty","array","x","push","attr","name","value","arguments","length","setAttribute","getAttribute","text","innerText","textContent","html","class","add","className","classList","has","contains","on","eventName","fn","addEventListener","off","removeEventListener","find","selector","scope","querySelectorAll","children","siblings","Array","from","filter","n","next","nodeType","previous","previousSibling","index","list","i"],"mappings":"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","file":"dom.56111015.map","sourceRoot":"..\\src","sourcesContent":["window.dom = {\r\n    console(node){\r\n        console.log(node)\r\n    } ,\r\n\r\n    create(string) {\r\n        const container = document.createElement('template');\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    },\r\n\r\n    after(node, node2) {\r\n        node.parentNode.insertBefore(node2, node.nextSibling);\r\n        // 找到node父亲，让父亲找到儿子node，并在node的下一个节点的前面插入node2\r\n    },\r\n\r\n    before(node, node2) {\r\n        node.parentNode.insertBefore(node2, node);\r\n    },\r\n\r\n    append(parent, node) {\r\n        parent.appendChild(node)\r\n    },\r\n\r\n    wrap(node, parent) {\r\n        dom.before(node, parent)\r\n        dom.append(parent, node)\r\n        // append插入元素到别的地方，元素会在原先的位置移除\r\n    },\r\n\r\n    remove(node) {\r\n        node.parentNode.removeChild(node)\r\n        return node\r\n    },\r\n\r\n    empty(node) {\r\n        // 用node. innerHTML = ''  也可，但没有返回值\r\n        // 等价于 const childNodes  = node.childNodes\r\n        // const {childNodes} = node\r\n        const array = []\r\n        let x = node.firstChild\r\n        while (x) {\r\n            array.push(dom.remove(node.firstChild))\r\n            x = node.firstChild\r\n        }\r\n        return array\r\n    },\r\n\r\n    attr(node, name, value) {    //重载\r\n        if (arguments.length === 3) {\r\n            node.setAttribute(name, value)\r\n        } else if (arguments.length === 2) {\r\n            node.getAttribute(name)\r\n        }\r\n    },\r\n\r\n    text(node, string) {        // 适配\r\n        if (arguments.length === 2) {\r\n            if ('innerText' in node) {\r\n                node.innerText = string\r\n            } else {\r\n                node.textContent = string\r\n            }\r\n        }\r\n        if (arguments.length === 1) {\r\n            if ('innerText' in node) {\r\n                return node.innerText\r\n            } else {\r\n                return node.textContent\r\n            }\r\n        }\r\n    },\r\n\r\n    html(node, string) {\r\n        if (arguments.length === 2) {\r\n            node.innerHTML = string\r\n        } else if (arguments.length === 1) {\r\n            return node.innerHTML\r\n        }\r\n    },\r\n/*\r\n    style(node,name,value){\r\n        if (arguments.length === 3) {\r\n            // dom.style(div,'color','red')\r\n            node.style[name] = value\r\n        } else if (arguments.length === 2) {\r\n            if (typeof name === 'string') {\r\n                //dom.style(div,'color')\r\n                return node.style[name]\r\n            } else if (name instanceof Object) {\r\n                // dom.style(div,{color:'red'})\r\n                const object = name\r\n                for (let key in object) {\r\n                    node.style[key] = object[key]\r\n                }\r\n            }\r\n        }\r\n    },\r\n*/\r\n    class: {\r\n        add(node, className) {\r\n            node.classList.add(className)\r\n        },\r\n        remove(node, className) {\r\n            node.classList.remove(className)\r\n        },\r\n        has(node, className) {\r\n            return node.className.contains(className)\r\n        }\r\n    },\r\n\r\n    on(node, eventName, fn) {\r\n        node.addEventListener(eventName, fn)\r\n    },\r\n    off(node, eventName, fn) {\r\n        node.removeEventListener(eventName, fn)\r\n    },\r\n\r\n    find(selector, scope) {\r\n        // find返回的是一个数组，用时一般后面加[0]\r\n        return (scope || document).querySelectorAll(selector)\r\n    },\r\n\r\n    parent(node) {\r\n        return node.parentNode\r\n    },\r\n\r\n    children(node) {\r\n        return node.children\r\n    },\r\n\r\n    siblings(node) {\r\n        return Array.from(node.parentNode.children).filter(n => n !== node)\r\n    },\r\n\r\n    next(node) {\r\n        let x = node.nextSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.nextSibling\r\n        }\r\n        return x\r\n    },\r\n\r\n    previous(node) {\r\n        let x = node.previousSibling\r\n        while (x && x.nodeType === 3) {\r\n            x = x.previousSibling\r\n        }\r\n        return x\r\n    },\r\n\r\n    index(node) {\r\n        const list = dom.children(node.parentNode)\r\n        let i\r\n        for (i = 0; i < list.length; i++) {\r\n            if (list[i] === node) {\r\n                break\r\n            }\r\n        }\r\n        return i\r\n    }\r\n\r\n};\r\n\r\n// window.dom.create = function(){};"]}