{"mappings":"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","sources":["src/dom.js"],"sourcesContent":["window.dom = {\r\n    create(string){\r\n        const container = document.createElement('template');\r\n        container.innerHTML = string.trim();\r\n        return container.content.firstChild;\r\n    } ,\r\n\r\n    after(node,node2){\r\n        node.parentNode.insertBefore(node2,node.nextSibing);\r\n        // 找到node父亲，让父亲找到儿子node，并在node的下一个节点的前面插入node2\r\n    } ,\r\n\r\n    before(node,node2){\r\n        node.parentNode.insertBefore(node2,node);\r\n    } ,\r\n\r\n    append(parent,node){\r\n    parent.appendChild(node)\r\n} ,\r\n\r\nwrap(node,parent){\r\n    dom.before(node,parent)\r\n    dom.append(parent,node)\r\n    // append插入元素到别的地方，元素会在原先的位置移除\r\n} ,\r\n\r\nremove(node){\r\n    node.parentNode.removeChild(node)\r\n    return node\r\n} ,\r\n\r\nempty(node){\r\n    // 用node. innerHTML = ''  也可，但没有返回值\r\n    // 等价于 const childNodes  = node.childNodes\r\n    // const {childNodes} = node\r\n    const array = []\r\n    let x = node.firstChild\r\n    while(x){\r\n        array.push(dom.remove(node.firstChild))\r\n        x = node.firstChild\r\n    }\r\n    return array\r\n} ,\r\n\r\nattr(node,name,value){    //重载\r\n    if(arguments.length === 3){\r\n        node.setAttribute(name,value)\r\n    }else if(arguments.length === 2){\r\n        node.getAttribute(name)\r\n    }\r\n} ,\r\n\r\ntext(node,string){    // 适配\r\n    if(arguments.length === 2){\r\n        if('innerText' in node){\r\n            node.innerText = string\r\n        }else{\r\n            node.textContent = string\r\n        }\r\n    }\r\n    if(arguments.length === 1){\r\n        if('innerText' in node){\r\n            return node.innerText\r\n        }else{\r\n            return node.textContent\r\n        }\r\n    }\r\n} ,\r\n\r\nhtml(node,string){\r\n    if(arguments.length === 2){\r\n        node.innerHTML = string\r\n    }else if(arguments.length === 1){\r\n        return node.innerHTML\r\n    }\r\n} ,\r\n\r\nstyle(node,name,value){\r\n    if(arguments.length === 3){\r\n        // dom.style(div,'color','red')\r\n        node.style[name] = value\r\n    }else if(arguments.length === 2){\r\n        if(typeof name === 'string'){\r\n            //dom.style(div,'color')\r\n            return node.style[name]\r\n        }else if(name instanceof Object){\r\n            // dom.style(div,{color:'red'})\r\n            const object = name\r\n            for(let key in object){\r\n                node.style[key] = object[key]\r\n            }\r\n        }\r\n    }\r\n} ,\r\n\r\nclass :{\r\n    add(node,className){\r\n        node.classList.add(className)\r\n    } ,\r\n    remove(node,className){\r\n        node.classsList.remove(className)\r\n    } ,\r\n    has(node,className){\r\n        return node.className.contains(className)\r\n    }\r\n} ,\r\n\r\non(node,eventName,fn){\r\n    node.addEventListeneer(eventName,fn)\r\n} ,\r\noff(node,eventName,fn){\r\n    node.removeEventListener(eventName,fn)\r\n} ,\r\n\r\nfind(selector,scope){\r\n    // find返回的是一个数组，用时一般后面加[0]\r\n    return (scope||document).querySelectorAll(selector)\r\n} ,\r\n\r\nparent(node){\r\n    return node.parentNode\r\n} ,\r\n\r\nchildren(node){\r\n    return node.children\r\n} ,\r\n\r\nsiblings(node){\r\n    return Array.from(node.parentNode.children).filter(n=>n!==node)\r\n} ,\r\n\r\nnext(node){\r\n    let x=node.nextSibling\r\n    while(x && x.nodeType === 3){\r\n        x = x.nextSibling\r\n    }\r\n    return x\r\n} ,\r\n\r\nprevious(node){\r\n    let x=node.previousSibling\r\n    while(x && x.nodeType === 3){\r\n        x = x.previousSibling\r\n    }\r\n    return x\r\n} ,\r\n\r\nindex(node){\r\n    const list = dom.children(node.parentNode)\r\n    let i\r\n    for(i=0;i<list.length;i++){\r\n        if(list[i]===node){\r\n            break\r\n        }\r\n    }\r\n    return i\r\n}\r\n\r\n};\r\n\r\n// window.dom.create = function(){};"],"names":[],"version":3,"file":"index.755bdb92.js.map","sourceRoot":"/__parcel_source_root/"}